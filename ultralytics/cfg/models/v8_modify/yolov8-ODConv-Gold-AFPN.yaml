# Ultralytics YOLO üöÄ, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [ 0.33, 0.25, 2048 ]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [ 0.33, 0.50, 1024 ]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [ 0.67, 0.75, 768 ]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [ 1.00, 1.00, 512 ]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [ 1.00, 1.25, 512 ]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [ -1, 1, Conv, [ 64, 3, 2 ] ]  # 0-P1/2
  - [ -1, 1, Conv, [ 128, 3, 2 ] ]  # 1-P2/4
  - [ -1, 3, C2f, [ 128, True ] ]
  - [ -1, 1, Conv, [ 256, 3, 2 ] ]  # 3-P3/8
  #  - [ -1, 6, C2f_ODConv, [ 256, True ] ]
  - [ -1, 6, C2f, [ 256, True ] ]
  - [ -1, 1, Conv, [ 512, 3, 2 ] ]  # 5-P4/16
  #  - [ -1, 6, C2f_ODConv, [ 512, True ] ]
  - [ -1, 6, C2f, [ 512, True ] ]
  - [ -1, 1, Conv, [ 1024, 3, 2 ] ]  # 7-P5/32
  - [ -1, 3, C2f, [ 1024, True ] ]
  - [ -1, 1, SPPF, [ 1024, 5 ] ]  # 9
#  - [ -1, 1, ASCPA, [ 1024 ] ]  # 10

# YOLOv8.0n head
head:
  # low-gd
  - [ [ 2, 4, 6, -1 ], 1, Low_FAM, [ ] ]
  - [ -1, 1, Low_IFM, [ 768, 96, 3,[ 512, 256 ] ] ] # 12-low_global_info
  #  - [ -1, 1, Split, [ 512, 256 ] ] # 12-low_global_info

  - [ 10, 1, SimConv, [ 512, 1, 1 ] ] # 13-c5_half
  - [ [ 4, 6, -1 ], 1, Low_LAF, [ 1024 ] ] # ?
  - [ [ -1, 13 ], 1, Inject, [ 512, 0 ] ]
  - [ -1, 12, RepBlock, [ 512 ] ] # 16-p4

  - [ -1, 1, SimConv, [ 256, 1, 1 ] ] # 17-p4_half
  - [ [ 2, 4, -1 ], 1, Low_LAF, [ 512 ] ]
  - [ [ -1, 13 ], 1, Inject, [ 256, 1 ] ]
  - [ -1, 12, RepBlock, [ 256 ] ] # 20-p3

  # high-gd
  - [ [ -1, 17, 9 ], 1, High_FAM, [ 1, 'torch' ] ]
  # yolovn‰∏ésÁöÑÈÖçÁΩÆ‰∏ç‰∏ÄÊ†∑, n:448,s:896
  - [ -1, 1, High_IFM, [ 2, 704, 8, 4, 1, 2, 0, 0, [ 0.1, 2 ],[ 512, 1024 ] ] ]
  - [ -1, 1, nn.Conv2d, [ 1536, 1, 1, 0 ] ]
#  - [ -1, 1, Split, [ 512, 1024 ] ] # 24-high_global_info

  - [ [ 21, 18 ], 1, High_LAF, [ ] ]
  - [ [ -1, 25 ], 1, Inject, [ 512, 0 ] ]
  - [ -1, 12, RepBlock, [ 512 ] ] # 27-n4

  - [ [ -1, 14 ], 1, High_LAF, [ ] ]
  - [ [ -1, 25 ], 1, Inject, [ 1024, 1 ] ]
  - [ -1, 12, RepBlock, [ 1024 ] ] # 30-n5


  - [ [ 21, 28, 31 ], 1, Detect, [ nc ] ]  # Detect(P3, P4, P5)
  #    - [ [ 15, 18, 21 ], 1, Detect_AFPN3, [ nc, 256 ] ]  # Detect(P3, P4, P5)

#  - [ [ 21, 28, 31 ], 1, Detect_AFPN3, [ nc, 256 ] ]  # Detect(P3, P4, P5)
